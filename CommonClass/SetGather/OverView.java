package CommonClass.SetGather;

public class OverView {
    /*
    1.该集合中元素没有先后放入次序（不代表随机），且不允许重复
    2.该集合主要实现类是：HashSet类，TreeSet类和LinkedHashSet类
    3.其中HashSet底层是采用哈希表进行管理的
    4.其中TreeSet类的底层是采用红黑树进行数据管理的
    5.哈希表：一维数组上每个元素都是一个单向链表
    6.元素放入HashSet集合的原理：
        1.使用元素调用hashCode方法获取对应的哈希码值，再由某种哈希算法计算出该元素在数组中的索引位置
        2.若该位置没有元素，则将该元素直接放入即可
        3.若该位置有元素，则使用新元素与已有元素依次比较哈希值，若哈希值不相同，则将该元素直接放入
        4.若新元素与已有元素的哈希值相同，则使用新元素调用equals方法与已有元素依次比较
        5.若相等则添加失败，否则将元素直接放入即可
    7.由于TreeSet集合的底层采用有序二叉树进行数据的管理，当有新元素插入到TreeSet集合时，需要使用新元素与集合中已有的元素依次比较来确定新元素的合理位置（为了让整个有序二叉树依然有规律）
    8.*****重点：比较元素大小的规则有两种方式：
     使用元素的自然排序进行比较并排序，让元素类型实现java.lang.Comparable接口；（从小到大排序）
     使用比较器规则进行比较并排序，构造TreeSet集合时传入java.utll.Comparator接口；
   9.自然排序的规则比较单一，而比较器的规则比较多元化，而且比较器优先于自然排序
  10.有序二叉树：左小于根小于右

     */
}
