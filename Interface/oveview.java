package Interface;

/*
接口
   overview：接口就是一种公共的规范标准，只要符合规范标准，大家都可以通用
             Java中的接口更多的体现在对行为的抽象

接口的特点
   ·接口用关键字interface修饰
       public interface 接口名{}
   ·类实现接口用implements 表示
       public class 类名 implements 接口名{}
   ·接口不能实例化
       接口如何实例化呢？参照多态的方式，通过实现类对象实例化，这叫接口多态
       多态的形式：具体类多态，抽象类多态，接口多态
       多态的前提：有继承或者实现关系；有方法重写；有父（类/接口）引用指向（子/实现）类对象
   ·接口的实现类
       要么重写接口中所有的抽象方法
       要么是抽象类

Object类：每个类都有Object作为超类。所有对象（包括数组）都实现了这个类的方法
    构造方法：Object（）：构造一个新对象（只有无参构造方法）

接口的成员特点
  ·成员变量
     1.只能是常量
     默认修饰符：public static final
  ·构造方法
    1.接口没有构造方法，因为接口主要是对行为进行抽象的，是没有具体存在的
    2.一个类如果没有父类，默认继承自Object类
  ·成员方法
    1.只能是抽象方法
    2.默认修饰符：public abstract

 接口和接口之间的关系：使用extends关键字表达继承关系，支持多继承
 */
public class oveview {
}
