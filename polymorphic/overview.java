package polymorphic;

/*
   多态：
      概述：同一个对象，在不同时刻表现出不同状态
      举例：猫
      我们可以说猫是猫：猫 cat =new 猫（）;
      我们也可以说猫是动物：动物 animal=new 猫（）;
      这里猫在不同时刻表现出来了不同的形态，这就是多态

      多态的前提和体现
       1.有继承/实现关系
       2.有方法重写
       3.有父类引用指向子类对象

       多态中成员访问特点
       ·成员变量：编译看左边，执行看左边
       ·成员方法：编译看左边，执行看右边
       为什么成员变量和成员方法的访问不一样？
       ·因为成员方法有重写，而成员变量没有
       ·如果一定要访问子类的成员变量，就采用强转（父类强转为子类）

       *****编译看左边，执行看右边

       多态的好处和弊端
       1.多态的好处：提高了程序的扩展性
          具体表现：定义方法的时候，使用父类型作为参数，将来在使用的时候，使用具体的子类型参与操作
       2.多态的弊端：不能使用子类的特有功能

       多态中的转型
        ·向上转型
           从子到父
           父类引用指向子类对象
        ·向下转型
          从父到子
          父类引用转为子类对象

      对于父子类都有的静态方法来说，编译和运行阶段都调用父类版本
 */
public class overview {
}
